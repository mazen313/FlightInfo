// <auto-generated />
using System;
using FlightInfo.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightInfo.Persistence.Migrations
{
    [DbContext(typeof(FlightInfoDbContext))]
    [Migration("20190313193428_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlightInfo.Domain.Entities.Airport", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Altitude");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("DST");

                    b.Property<string>("IATA");

                    b.Property<string>("ICAO");

                    b.Property<decimal>("Latitude");

                    b.Property<decimal>("Longitude");

                    b.Property<string>("Name");

                    b.Property<decimal>("Timezone");

                    b.Property<string>("Type");

                    b.Property<string>("Tz");

                    b.HasKey("AirportId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("FlightInfo.Domain.Entities.Flight", b =>
                {
                    b.Property<int?>("DepartureAirportId");

                    b.Property<int?>("DestinationAirportId");

                    b.Property<double>("Distance");

                    b.Property<decimal>("FuelConsumption");

                    b.HasKey("DepartureAirportId", "DestinationAirportId");

                    b.HasIndex("DestinationAirportId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightInfo.Domain.Entities.Flight", b =>
                {
                    b.HasOne("FlightInfo.Domain.Entities.Airport", "DepartureAirport")
                        .WithMany("DepartureFlights")
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FlightInfo.Domain.Entities.Airport", "DestinationAirport")
                        .WithMany("DestinationFlights")
                        .HasForeignKey("DestinationAirportId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
